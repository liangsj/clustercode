version: '2.0'
services:
   webapp:
        image: golang
        container_name: webapp
        ports:
            - 8080:80
        networks:
            - front
        volumes:
            - ./go/webapp:/go/src/webapp
            - ./sh:/sh
        command: sh /sh/start.sh 
   mysql:
        image: mysql
        container_name: mysql
        ports:
            - 3306:3306
        networks:
            - front
        environment:
            "MYSQL_ROOT_PASSWORD": "123456"
   redis_master:
        image: redis
        container_name: redis_master
        networks:
            - front
        ports:
            - 7002:6379
        restart: always
   redis_slave_1:
        image: redis
        ports:
            - 7003:6379
        restart: always
        container_name: redis_slave_1
        command: redis-server --slaveof redis_master 6379
        networks:
            - front
        image: redis
        restart: always
   redis_slave_2:
        image: redis
        ports:
            - 7004:6379
        restart: always
        container_name: redis_slave_2
        networks:
            - front
        image: redis
        restart: always
        command: redis-server --slaveof redis_master 6379
   sentinel_1:
        image: redis
        ports:
            - 7006:26379
        restart: always
        container_name: sentinel_1
        networks:
            - front
        image: redis
        volumes:
            - ./conf:/data/conf
        restart: always

        command: redis-server /data/conf/sentinel.conf --sentinel  

   sentinel_2:
        image: redis
        ports:
            - 7005:26379
        restart: always
        container_name: sentinel_2
        networks:
            - front
        image: redis
        volumes:
            - ./conf:/data/conf
        restart: always
        command: redis-server /data/conf/sentinel.conf --sentinel
   nginx:
        image: nginx
        container_name: nginx
        volumes:
            - ./conf/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - 8220:8220
            - 8280:80
        networks:
            - front
   webapp_1:
        image: golang
        container_name: webapp_1
        ports:
            - 8081:80
        networks:
            - front
        volumes:
            - ./go/webapp:/go/src/webapp
            - ./sh:/sh
        command: sh /sh/start.sh 
   webapp_2:
        image: golang
        container_name: webapp_2
        ports:
            - 8082:80
        networks:
            - front
        volumes:
            - ./go/webapp:/go/src/webapp
            - ./sh:/sh
        command: sh /sh/start.sh   
networks:
    front:
        driver: bridge
    
